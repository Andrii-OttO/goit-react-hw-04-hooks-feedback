{"version":3,"sources":["componets/controls.js","componets/feedbackList.js","componets/feedback.js","App.js","index.js","componets/syle.module.css"],"names":["controls","options","onLeaveFeedback","Object","keys","map","option","value","type","onClick","List","good","neutral","bad","totalVoutes","positiveFeedback","className","styles","FeedbackItem","Feedback","useState","setGood","setBad","setNeutral","console","log","total","precent","Math","ceil","isNaN","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAwDeA,EAxBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC3B,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAEzB,OACE,wBAEEC,MAAOD,EACPE,KAAK,SACLC,QAAS,kBAAMP,EAAgBI,IAJjC,SAKGA,GAJIA,SC3BFI,EATF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,iBAApC,OACX,qBAAIC,UAAWC,IAAOC,aAAtB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCwHWI,MAnEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOP,EAAP,KAAYS,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBW,EAAhB,KA6BMT,EAAc,SAACH,EAAMC,EAASC,GAClC,OAAOF,EAAOC,EAAUC,GAS1B,OACE,gCACE,uDAEA,cAAC,EAAD,CACEZ,QAAS,CAAEU,OAAMC,UAASC,OAC1BX,gBA3CN,SAAyBD,GAEvB,OADAuB,QAAQC,IAAIxB,GACJA,GACN,IAAK,OACHoB,EAAQV,EAAO,GACf,MACF,IAAK,MACHW,EAAOT,EAAM,GACb,MACF,IAAK,UACHU,EAAWX,EAAU,GACrB,MAEF,QACE,WA+BF,4CACmB,IAAlBE,IACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,YAAaA,EAAYH,EAAMC,EAASC,GACxCE,iBArBiB,SAACJ,EAAMC,EAASC,GACvC,IAAIa,EAAQf,EAAOC,EAAUC,EACzBc,EAAUC,KAAKC,KAAa,IAAPlB,EAAce,GACvC,OAAOI,MAAMH,GAAW,EAAIA,EAkBJZ,CAAiBJ,EAAMC,EAASC,KAGpD,wDC9GOkB,MARf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCHNgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,aAAe,8B","file":"static/js/main.f89532b1.chunk.js","sourcesContent":["// import PropTypes from \"prop-types\";\r\n// import React from \"react\";\r\n\r\n// const controls = ({ options, onLeaveFeedback }) => {\r\n//   return (\r\n//     <div>\r\n//       {Object.keys(options).map((option) => {\r\n//         // {options.map((option) => {\r\n//         return (\r\n//           <button\r\n//             key={option}\r\n//             value={option}\r\n//             type=\"button\"\r\n//             onClick={() => onLeaveFeedback(option)}>\r\n//             {option}\r\n//           </button>\r\n//         );\r\n//       })}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// controls.propTypes = {\r\n//   onLeaveFeedback: PropTypes.func.isRequired,\r\n//   options: PropTypes.object.isRequired,\r\n// };\r\n\r\n// export default controls;\r\n////\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst controls = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map((option) => {\r\n        // {options.map((option) => {\r\n        return (\r\n          <button\r\n            key={option}\r\n            value={option}\r\n            type=\"button\"\r\n            onClick={() => onLeaveFeedback(option)}>\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\ncontrols.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default controls;\r\n","import React from 'react';\r\nimport styles from './syle.module.css';\r\n\r\nconst List = ({ good, neutral, bad, totalVoutes, positiveFeedback }) => (\r\n  <ul className={styles.FeedbackItem}>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {totalVoutes}</li>\r\n    <li>Positive Feedback: {positiveFeedback}%</li>\r\n  </ul>\r\n);\r\nexport default List;\r\n","// import React from \"react\";\r\n// import Controls from \"./controls\";\r\n// import List from \"./feedbackList\";\r\n\r\n// class Feedback extends React.Component {\r\n//   state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n//   // handleGoodClick = () => {\r\n//   //   this.setState(prevState => ({ good: prevState.good + 1 }));\r\n//   // };\r\n//   // optionsArr() {\r\n//   //   const options = Object.keys(this.state);\r\n//   //   return options;\r\n//   // }\r\n\r\n//   onLeaveFeedback = (option) => {\r\n//     this.setState((prevState) => ({ [option]: prevState[option] + 1 }));\r\n//   };\r\n\r\n//   totalVoutes = () => {\r\n//     return this.state.good + this.state.neutral + this.state.bad;\r\n//   };\r\n\r\n//   positiveFeedback = () => {\r\n//     let total = this.state.good + this.state.neutral + this.state.bad;\r\n//     return Math.ceil((this.state.good * 100) / total);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h2>Please leave feedback</h2>\r\n\r\n//         <Controls\r\n//           // options={this.optionsArr()}\r\n//           options={this.state}\r\n//           onLeaveFeedback={this.onLeaveFeedback}\r\n//         />\r\n//         <h3>Statistics</h3>\r\n//         {this.totalVoutes() !== 0 ? (\r\n//           <List\r\n//             good={this.state.good}\r\n//             neutral={this.state.neutral}\r\n//             bad={this.state.bad}\r\n//             totalVoutes={this.totalVoutes(this.state)}\r\n//             positiveFeedback={this.positiveFeedback(this.state)}\r\n//           />\r\n//         ) : (\r\n//           <h3> No Feedback given</h3>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n//export default Feedback;\r\n//////////\r\n\r\nimport { useState } from \"react\";\r\nimport Controls from \"./controls\";\r\nimport List from \"./feedbackList\";\r\n\r\nfunction Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n\r\n  function onLeaveFeedback(options) {\r\n    console.log(options);\r\n    switch (options) {\r\n      case \"good\":\r\n        setGood(good + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad(bad + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral(neutral + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n    // if (options === \"good\") {\r\n    //   setGood(good + 1);\r\n    // }\r\n    // if (options === \"neutral\") {\r\n    //   setNeutral(neutral + 1);\r\n    // }\r\n    // if (options === \"bad\") {\r\n    //   setBad(bad + 1);\r\n    // }\r\n  }\r\n\r\n  const totalVoutes = (good, neutral, bad) => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const positiveFeedback = (good, neutral, bad) => {\r\n    let total = good + neutral + bad;\r\n    let precent = Math.ceil((good * 100) / total);\r\n    return isNaN(precent) ? 0 : precent;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Please leave feedback</h2>\r\n\r\n      <Controls\r\n        options={{ good, neutral, bad }}\r\n        onLeaveFeedback={onLeaveFeedback}\r\n      />\r\n      <h3>Statistics</h3>\r\n      {totalVoutes() !== 0 ? (\r\n        <List\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          totalVoutes={totalVoutes(good, neutral, bad)}\r\n          positiveFeedback={positiveFeedback(good, neutral, bad)}\r\n        />\r\n      ) : (\r\n        <h3> No Feedback given</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// goit-react-hw-02-feedback\r\nexport default Feedback;\r\n","import \"./App.css\";\nimport \"./componets/syle.module.css\";\nimport Feedback from \"./componets/feedback.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackItem\":\"syle_FeedbackItem__2wbSQ\"};"],"sourceRoot":""}